
:: tup a b = (msg, (msg a b))
:: first t = (t (a b, a))
:: snd   t = (t (a b, b))
:: fm f st = (s, let :: s_ = (st s) in let :: x_ = (f (first s_)) in (tup x_ s_))
:: incr = (s, (tup s s+1))
:: init =<-(s, (tup s s))

@print (snd (incr 0))

